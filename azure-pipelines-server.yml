trigger:
  paths:
    include:
      - "server/*"

parameters:
  - name: AgentSelect
    displayName: Select Agent
    type: string
    default: Azure Pipelines
    values:
      - ARM
      - Azure Pipelines
  - name: UnitTests
    displayName: Run unit tests
    type: boolean
    default: false
  - name: E2eTests
    displayName: Run e2e tests
    type: boolean
    default: false
  - name: PublishImage
    displayName: Publish docker image
    type: boolean
    default: false

jobs:
  - job: build
    displayName: Build wordki server

    pool:
      name: ${{ parameters.AgentSelect }}

    steps:
      - task: Docker@2
        inputs:
          containerRegistry: "docker-hub"
          command: "build"
          Dockerfile: "./server/ci/docker/Dockerfile"
          buildContext: "./server/"
      - task: DockerCompose@0
        displayName: Build
        inputs:
          containerregistrytype: "Container Registry"
          dockerRegistryEndpoint: "docker-hub"
          dockerComposeFile: "server/ci/docker/docker-compose.build.yml"
          action: "Run a Docker Compose command"
          projectName: "ks_wordki"
          dockerComposeCommand: build
      - task: CmdLine@2
        displayName: "Test - build"
        inputs:
          script: "docker build -f ./server/ci/docker/Dockerfile --target tests -t wordki-server-tests:${BUILD_BUILDID} ./server/"
      - task: CmdLine@2
        displayName: "Test - run"
        inputs:
          script: |
            docker run -v /var/run/docker.sock:/var/run/docker.sock -e ASPNETCORE_ENVIRONMENT=DockerTest --name wordki-server-tests-${BUILD_BUILDID} --net=host wordki-server-tests:${BUILD_BUILDID}
            exit 0
      - task: CmdLine@2
        displayName: "Test - copy results"
        inputs:
          script: |
            docker ps -a
            docker cp wordki-server-tests-${BUILD_BUILDID}:/server/tests/Cards.Domain.Tests/TestResults $(System.DefaultWorkingDirectory)/test
            docker cp wordki-server-tests-${BUILD_BUILDID}:/server/tests/Cards.E2e.Tests/TestResults $(System.DefaultWorkingDirectory)/test
            ls $(System.DefaultWorkingDirectory)/test
      - task: PublishTestResults@2
        displayName: "Test - publishing"
        inputs:
          testResultsFormat: "JUnit"
          searchFolder: $(System.DefaultWorkingDirectory)/test
          testResultsFiles: "*.xml"
      - task: CmdLine@2
        displayName: "Test - cleaning"
        inputs:
          script: "docker rm wordki-server-tests-${BUILD_BUILDID}"
      - task: DockerCompose@0
        displayName: Release
        enabled: ${{ parameters.PublishImage }}
        inputs:
          containerregistrytype: "Container Registry"
          dockerRegistryEndpoint: "docker-hub"
          dockerComposeFile: "server/ci/docker/docker-compose.release.yml"
          projectName: "ks_wordki"
          action: "Run a Docker Compose command"
          dockerComposeCommand: build
      - task: Docker@2
        displayName: Login to Docker Hub
        enabled: ${{ parameters.PublishImage }}
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        inputs:
          containerRegistry: "docker-hub"
          command: "login"
      - task: CmdLine@2
        enabled: ${{ parameters.PublishImage }}
        displayName: Tag Docker Image
        inputs:
          script: "docker tag kamilsoloducha/wordki-server:$(Build.BuildId) kamilsoloducha/wordki-server:latest"
      - task: Docker@2
        enabled: ${{ parameters.PublishImage }}
        displayName: Push
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        inputs:
          containerRegistry: "docker-hub"
          repository: "kamilsoloducha/wordki-server"
          command: "push"
          tags: |
            $(Build.BuildId)
